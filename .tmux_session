#!/bin/bash -l
TMUX="/usr/bin/tmux"
SHELL="/bin/bash"

# Launch command in new window
# Arg1: Window name
# Arg2: Command
commw() {
   win=$(${TMUX} neww -Pd -n "$1" "$2")
}

# Launch shell in new window and run command
# Arg1: Window name
# Arg2: Command
shellw() {
   commw $1
   ${TMUX} send-keys -t "$win" "$2" C-m
}

# Launch command in new pane
# Arg1: Target window/pane
# Arg2: Command
# Arg3: Flags (optional)
commp() {
   local target=$1
   local cmd=$2
   shift 2
   pane=$(${TMUX} split-window $@ -Pdt "$target" "$cmd")
}

# Launch shell in new pane and run command
# Arg1: Target window/pane
# Arg2: Command
# Arg3: Flags (optional)
shellp() {
   local target=$1
   local cmd=$2
   shift 2
   pane=$(${TMUX} split-window $@ -Pdt "${target}")
   ${TMUX} send-keys -t "${pane}" "${cmd}" C-m
}

## Example session setup
#example() {
#   shellw ShellWindow "who"
#   shellp $win "uname -a"
#   shellp $win "ps"
#   shellp $win "cal"
#   ${TMUX} select-layout -t $win tiled
#
#   commw CommandWindow "top"
#   shellp $win "ls -l"
#   shellp $pane "id" "-h -p 30"
#   commp $pane "watch date" "-p 40"
#
#   # Set up key bindings
#   ${TMUX} bind A send-keys "echo Hello"
#}

# Include local file with session functions
[ -r "${0}.local" ] && . "${0}.local"

if [ "$2" != "--no-session" ]; then
   # Rename current session so it is capitalized
   [ "${1^}" = "${1}" ] || ${TMUX} rename-session "${1^}"
fi

# Test if there is a function named $1 (lowercase) and execute if found
if [ "x$(type -t "${1,,}")" = "xfunction" ]; then
   # Fix window numbering by moving current window 1
   # way back in list. This window will close when
   # setup function has finished.
   ${TMUX} move-window -t 99
   ${1,,}
else
   # Fall back if no defined function found
   exec ${SHELL}
fi
