#!/bin/sh

error() {
   echo "error: $*" >&2
}

canonicalize() {
   local dir=$(dirname $1)
   local file=$(basename $1)
   (cd "${dir}" && echo "$(pwd -P)/${file}")
}

is_same_file() {
   local source="$(canonicalize $1)"
   local target="$(canonicalize $2)"

   # Check if it is a relatve link
   [ -z "${source}" ] && source="$(canonicalize $(dirname $2)/$1)"

   # Return with an error if source or target is invalid
   [ -z "${source}" -o -z "${target}" ] && return 1

   [ "${source}" != "${target}" ] && return 1
   return 0
}

link_file() {
   [ -z "$3" ] && return 12
   local targetdir="$1"
   local sourcedir="$2"
   local filename="$3"
   local target=$1/$3
   local source=$2/$3

   [ ${Init} -eq 1 ] && rm -f "${target}"

   if [ -L "${target}" ]; then
      if is_same_file "${source}" "${target}"; then
         # Target already linked, do nothing
         return
      fi
      if [ -r ${target} ]; then
         error "'${target}' already linked ('$(readlink ${target})'), skipping!"
         return
      fi
      # Remove broken link
      rm "${target}"
   elif [ -f "${target}" ]; then
      error "'${target}' exists and is a file, skipping!"
      return
   fi

   echo "  linking '${source}' -> '${targetdir}'"
   ln -s "${source}" "${targetdir}"
}

list_dir() {
   local path
   find "$1" -maxdepth 1 -type f | while read path; do
      basename ${path}
   done
}

setup_dotfiles() {
   echo "Setting up links in ~/"
   Files=$(list_dir ${Basedir})
   for File in ${Files}; do
      [ "${File}" = "${Basename}" ] && continue
      link_file "${HOME}" "${Basedir}" "${File}"
   done
}

setup_subdir() {
   while [ -n "$1" ]; do
      local subdirtarget="${HOME}/$1"
      local subdirsource="${Basedir}/$1"
      shift

      [ -d "${subdirsource}" ] || continue
      if [ ! -d "${subdirtarget}" ]; then
         mkdir -p "${subdirtarget}"
      fi

      echo "Setting up links in ~/${subdirtarget}"
      Files=$(list_dir ${subdirsource})
      for File in ${Files}; do
         link_file "${subdirtarget}" "../${subdirsource}" "${File}"
      done
   done
}

Basename=$(basename "$0")
Basedir=$(dirname "$0")
Init=0

[ "$1" = "--init" ] && Init=1

setup_dotfiles
setup_subdir bin
